version: '3'

networks:
  laravel:

services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.22
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    # volumes:
    #   - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: do
      MYSQL_USER: do
      MYSQL_PASSWORD: secret123S
      MYSQL_ROOT_PASSWORD: secret123S
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  composer:
    image: composer:2.0.9
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    # networks:
    #   - laravel
      
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php','/var/www/html/artisan']
    networks:
      - laravel      
      

  # phpmyadmin:
  #   depends_on:
  #    - mysql
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin
  #   restart: always
  #   ports:
  #     - '8081:80'
  #   environment:
  #     PMA_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: secret 
  #   networks:
  #         - laravel    
